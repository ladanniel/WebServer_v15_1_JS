java-js:属于弱类型语言


1、优点：
交互性：可以直接和用户进行交互；
安全性：只能在浏览器内运行，不允许访问本地硬盘中的其他资源
如何添加js：见1helloWord
2、Javascript语法：
   2.1数据类型：
      2.1.1：数值类型（number）
      2.1.2：字符串类型（String）
      2.1.3：布尔类型（boolean）
      2.1.4：undefine
      2.1.5：null
 3、对象类型：因为js属于弱类型的语言，所以声明变量的时候不需要指定变量类型，直接赋值就可以；
      例如：
          var x = 18;
          var y = "abc";
          var z = true;
              x = 20;
              x = "xyz";
4、数值类型：在js中所有数值的底层都是浮点型，在使用的过程中会自动转换类型（类型转换时隐式的）
          var x = 10/2; 5 
          var x = 10/3; 3.3333(自动转换)
5、在浏览器consol中的tab键功能类似于enter或者空格键，如果想对已经写过的程序再次修改，则按上箭头按键即可
6、字符串类型：
          通过单引号或双引号修饰一个字符串，例如：
          var s1 = 'aaa'; var s1 = "aaa";
      boolean类型
      值为true或false；
7、 undefined  未定义；
   此类型只有一个值，值为undefined；变量声明但是没有定义的，类型和值同为undefined；
   
8、null类型
   此类型也只有一个值，值为null;通常应用在方法的返回值位置；
   
9、数据类型转换：
   在js中所有数值的底层都是浮点型，在使用的过程中会自动转换类型（类型转换时隐式的）
 9.1：数值类型：
      转字符串：直接转18->"18"
      转布尔值：0和NaN 转为false； 其他所有数值转为 true；
                （""）转为 false，其他转为true；
      字符串类型转数字：如果字符串为数字，则直接转 "18"->18;"空字符串"("")转为->0;
                        非数字字符串转成NaN；
 9.2 alert("66"+6);+号相当于黏贴符号 6转换为字符“6”结果为：“666”
     alert("66"-6)；  “66”转换成数字66             结果为：60
             